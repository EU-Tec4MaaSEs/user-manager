name: Docker Image CI - User Manager

env:
  DOCKER_IMAGE: user-manager
  DEPLOYMENT_FILE: user-manager-deployment
  NAMESPACE: tec4maases

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
      - '*.github/workflows/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
      - '*.github/workflows/**'
  workflow_dispatch:

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        buildkitd-config-inline: |
          [registry."ghcr.io"]
            mirrors = ["ghcr.io"]
        
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CI_ORG_TOKEN }}

    - name: Build and Push Image with Cache
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ghcr.io/eu-tec4maases/${{ env.DOCKER_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

  aks-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
          }
    
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Install kubelogin
      run: |
        # Download and install kubelogin
        az aks install-cli
    
    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
    
    - name: Convert kubeconfig to use service principal
      run: |
        kubelogin convert-kubeconfig -l spn
    
    - name: Rolling restart deployment
      env:
        AAD_SERVICE_PRINCIPAL_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      run: |
        kubectl rollout restart deployment/${{ env.DEPLOYMENT_FILE }} -n ${{ env.NAMESPACE }}
        kubectl rollout status deployment/${{ env.DEPLOYMENT_FILE }} -n ${{ env.NAMESPACE }} --timeout=300s
